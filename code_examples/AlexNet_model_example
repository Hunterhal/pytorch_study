class Net(nn.Module):

    def __init__(self):
        super(Net, self).__init__()
        self.conv1 = nn.Conv2d(3, 96, kernel_size = 11, stride = 4)
        nn.ReLU()
        nn.MaxPool2d(3, 2) 
        nn.LocalResponseNorm(size = 5, alpha = 1e-4, beta = 0.75, k = 2)
        self.conv2 = nn.Conv2d(96, 256, kernel_size = 5, stride = 4)
        nn.ReLU()
        nn.LocalResponseNorm(size = 5, alpha = 1e-4, beta = 0.75, k = 2)
        nn.MaxPool2d(3, 2)      
        self.conv3 = nn.Conv2d(256, 384, kernel_size = 3, stride = 4)
        nn.ReLU()
        self.conv4 = nn.Conv2d(384, 384, kernel_size = 3, stride = 4)
        nn.ReLU()
        self.conv5 = nn.Conv2d(384, 256, kernel_size = 3, stride = 4)
        nn.ReLU()
        nn.MaxPool2d(3,2)
        
        self.fc1 = nn.Linear(256 * 6 * 6, 4096)
        nn.ReLU() 
        self.fc2 = nn.Linear(4096, 4096)
        nn.ReLU()
        self.fc3 = nn.Linear(4096, 1000)
        nn.ReLU()
net = Net()
print(net)
